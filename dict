#!/usr/bin/env node

const chalk = require('chalk');
const args = process.argv;
const readline = require('readline');
const axios = require('axios');


const url = 'https://od-api.oxforddictionaries.com/api/v1';

const head = {
  "Accept": "application/json",
  "app_id": "143bb6d3",
  "app_key": "a82022bd200cfb7775c1e2c79e3b1f0e"
              };


// search for meaning function
function def(){
  const q = chalk.blue(`
  enter the word
  
  `);

  prompt(q).then(word => {

    axios({
      method: 'get',
      url: url + '/entries/en/' + word,
      headers: head

    }).then(res => {
      const meaning = res.data.results[0].lexicalEntries[0].entries[0].senses[0].definitions[0];
      console.log(chalk.yellow('meaning:' + meaning));
    })
    })
}




//prompt question function
function prompt(question) {
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});
return new Promise((resolve, error) => {
  rl.question(question, (answer) => {
    
    rl.close();
    resolve(answer);
  });
})
}













// help guide
const help = function() {
  const helpText = `
  This is a dictionary app- powered by oxford API.

  usage:
    ./dict <command>

    commands: 

    ./dict def:      fetches the meaning of the word entered.
    ./dict syn:      fetches the synonmys for the word entered.
    ./dict ant:      fetches the antonyms for the word entered.
    ./dict ex:       fetches some examples for the word entered.
    ./dict full:     fetches all the above details for the word entered.
    
    ./dict play:     Game displays display a definition, synonym, or antonym. 
                     You have to guess the word.
  `
  console.log(helpText);
}





//...
switch(args[2]) {
  case 'help':
  help()
    break
  case 'def':
    def()
    break
  case 'get':
    break
  case 'complete':
    break
  default:
  console.log(chalk.red(`
  INVALID COMMAND PASSED
  `))
    help()
 }
// //...

